extends ../layouts/legend

include ../../includes/error

block content
	
	.post-add

		button(id ='showFormGuide' class ='showFormGuide btn btn-primary px-4') Show form filling guideline: 

		ul(id ='guidelines' class ='guidelines')
			p Click on the above button button to hide the form filling guideline.
			p
				b All fields mark with the asterisk symbol (*) should be filled and have a valid value.
			li Title should be provided and cannot be less than 0 character or be greater than 150 characters in length.
			li Date should be provided and cannot be less than 4 character or be greater than 15 characters in length.
			li Century should be provided and cannot be empty.
			li Continent should be provided and cannot be empty.
			li Country should be provided and cannot be empty.
			li Region should be provided and cannot be empty.
			li Genre should be provided and cannot be empty.
			li Ethnic Group should be provided and cannot be empty.
			li About Photo should be provided and cannot be less than 10 characters or be greater than 2000 characters in length.
			li Artist , Findspot , Medium , Credit of Photo cannot be greater than 30 characters in length.
			li Photo should and cannot be greater than 500kb or 500 kilobytes in file size.
			li Photo or Image should be provided and cannot be empty. This is not compulsory if you are updating the entry.

		+ajax

		form(method ='post' ,	action ='' enctype ='multipart/form-data' name ='photoForm')
			.form-group
				label(for ='title') Title * :
				input(type ='text' id ='title' name ='title' class ='form-control form-control-sm' placeholder ='Plato with Socrates'  value =(undefined === photo ? '' : legend.title))

			.form-group
				label(for ='date') Date * :
				input(type ='text' id ='date' name ='date' class ='form-control form-control-sm' placeholder ='1900'  value =(undefined === photo ? '' : legend.date))

			.form-group
				label(for ='century') Century * :
				select(id ='century' name ='century' class ='form-control form-control-sm' )
					option(value ='')
					for century in centuries
						if photo
							if legend.century
								option(value =century._id class ='form-control' selected =(century._id.toString() == legend.century._id || century._id.toString() == legend.century) ? 'selected' : false) #{century._id}
							else
								option(value=century._id) #{century._id}
						else
							option(value=century._id) #{century._id}

			.form-group
				label(for ='genre') Category * :
				select(id ='genre' name ='genre' class ='form-control form-control-sm' )
					option(value ='')
					for genre in genres
						if photo
							if legend.genre
								option(value =genre._id class ='form-control' selected =(genre._id.toString() == legend.genre._id || genre._id.toString() == legend.genre) ? 'selected' : false) #{genre._id}
							else
								option(value=genre._id) #{genre._id}
						else
							option(value=genre._id) #{genre._id}

			.form-group
				label(for ='country') Country * :
				select(id ='country' name ='country' class ='form-control form-control-sm' )
					option(value ='')
					for country in countries
						if photo
							if legend.country
								option(value =country._id class ='form-control' selected =(country._id.toString() == legend.country._id || country._id.toString() == legend.country) ? 'selected' : false) #{country._id}
							else
								option(value=country._id) #{country._id}
						else
							option(value=country._id) #{country._id}

			.form-group
				label(for ='continent') Continent * :
				select(id ='continent' name ='continent' class ='form-control form-control-sm' )
					option(value ='')
					for continent in continents
						if photo
							if legend.continent
								option(value =continent._id class ='form-control' selected =(continent._id.toString() == legend.continent._id || continent._id.toString() == legend.continent) ? 'selected' : false) #{continent._id}
							else
								option(value=continent._id) #{continent._id}
						else
							option(value=continent._id) #{continent._id}

			.form-group
				label(for ='region') Region * :
				select(id ='region' name ='region' class ='form-control form-control-sm' )
					option(value ='')
					for region in regions
						if photo
							if legend.region
								option(value =region._id class ='form-control' selected =(region._id.toString() == legend.region._id || region._id.toString() == legend.region) ? 'selected' : false) #{region._id}
							else
								option(value=region._id) #{region._id}
						else
							option(value=region._id) #{region._id}

			.form-group
				label(for ='ethnic_group') Ethnic Group * :
				select(id ='ethnic_group' name ='ethnic_group' class ='form-control form-control-sm' )
					option(value ='') 
					for eyon in eyons
						if photo
							if legend.ethnic_group
								option(value =eyon._id class ='form-control' selected =(eyon._id.toString() == legend.ethnic_group._id || eyon._id.toString() == legend.ethnic_group) ? 'selected' : false) #{eyon._id}
							else
								option(value=eyon._id) #{eyon._id}
						else
							option(value=eyon._id) #{eyon._id}

			.form-group
				label(for ='legend_body') Legend body * :
				textarea(id ='legend_body' name ='legend_body' class ='form-control form-control-sm' ) !{(undefined === photo ? '' : legend.legend_body)}

			.form-group.image
				label(for ='photo') Image * :
				if rmethod == 'POST'
					input(type ='file' id ='photo' name ='photo' class ='form-control form-control-sm' accept ='image/*' )
				if rmethod == 'PUT'
					input(type ='file' id ='photo' name ='photo' class ='form-control form-control-sm' accept ='image/*')

			.form-group
				input(type ='hidden' id ='link' value ='photo')

			.form-group
				input(type ='hidden' id ='update'  value =(undefined === photo ? '' : legend.slug))

			.form-group
				input(type ='hidden' id ='rmethod' class ='rmethod' value =rmethod)

			.form-group(id ='upload-group')
				button(class ='btn btn-primary' id ='addUpload') Upload Image
				button(class ='btn btn-danger' id ='delUpload') Delete Image
				button(class ='btn btn-secondary' id ='calUpload') Cancel Upload
				p(class ='' id ='upload-progress')
				p(class ='' id ='uploadError')
				p(class ='' id ='uploadError1')
				p(class ='' id ='uploadText')
				p(id ='uploadMessage')
				p(id ='percent')

			p
				button(type ='submit' title ='Submit' class ='btn btn-primary float-right px-4' id ='formSubmit') Submit