extends ../layouts/name_layout

include ../../includes/error

block content
	
	.name-add

		button(id ='showFormGuide' class ='showFormGuide btn btn-primary px-4') Show form filling guideline: 

		ul(id ='guidelines' class ='guidelines')
			p Click on the above button button to hide the form filling guideline.
			p All fields mark with the asterisk symbol (*) should be filled and have a valid value.
			li Name should be provided and cannot be less than 0 character or be greater than 36 characters in length.
			li Definition should be provided and cannot be less than 0 character or be greater than 300 characters in length.
			li Morphology should be provided and cannot be less than 0 character or be greater than 200 characters in length.
			li Gloss should be provided and cannot be less than 0 character or be greater than 200 characters in length.
			li Alphabet should be provided and cannot be empty.
			li Ethnic Group should be provided and cannot be empty.
			li Continent should be provided and cannot be empty.
			li Region should be provided and cannot be empty.
			li Gender should be provided and cannot be empty.
			li Specie should be provided and cannot be empty.
			li Baby should be provided and cannot be empty.

		+ajax

		form(method ='post' ,	action ='' id ='nameform' enctype ='application/x-www-form-urlencoded')
			.form-group
				label(for ='name') Name * :
				input(type ='text' id ='name' name ='name' class ='form-control form-control-sm' placeholder ='David' value =(undefined === name ? '' : name.name) )

			.form-group
				label(for ='definition') Definition * :
				textarea(id ='definition' name ='definition'  class ='form-control form-control-sm' ) #{(undefined === name ? '' : name.definition)}

			.form-group
				label(for ='morphology') Morphology * :
				textarea(id ='morphology' name ='morphology'  class ='form-control form-control-sm' ) #{(undefined === name ? '' : name.morphology)}

			.form-group
				label(for ='gloss') Gloss * :
				textarea(id ='gloss' name ='gloss'  class ='form-control form-control-sm' ) #{(undefined === name ? '' : name.gloss)}

			.form-group
				label(for ='alphabet') Alphabet * :
				select(id ='alphabet' name ='alphabet' class ='form-control form-control-sm' )
					option(value ='') 
					for alphabet in alphabets
						if name
							if name.alphabet
								option(value =alphabet._id class ='form-control'  selected =(alphabet._id.toString() == name.alphabet._id || alphabet._id.toString() == name.alphabet) ? 'selected' : false) #{alphabet._id}
							else
								option(value=alphabet._id) #{alphabet._id}
						else
							option(value=alphabet._id) #{alphabet._id}
							
			.form-group
				label(for ='ethnic_group') Ethnic Group * :
				select(id ='ethnic_group' name ='ethnic_group' class ='form-control form-control-sm' )
					option(value ='') 
					for eyon in eyons
						if name
							if name.ethnic_group
								option(value =eyon._id class ='form-control'  selected =(eyon._id.toString() == name.ethnic_group._id || eyon._id.toString() == name.ethnic_group) ? 'selected' : false) #{eyon._id}
							else
								option(value=eyon._id) #{eyon._id}
						else
							option(value=eyon._id) #{eyon._id}

			.form-group
				label(for ='continent') Continent * :
				select(id ='continent' name ='continent' class ='form-control form-control-sm' )
					option(value ='')
					for continent in continents
						if name
							if name.continent
								option(value =continent._id class ='form-control'  selected =(continent._id.toString() == name.continent._id || continent._id.toString() == name.continent) ? 'selected' : false) #{continent._id}
							else
								option(value=continent._id) #{continent._id}
						else
							option(value=continent._id) #{continent._id}

			.form-group
				label(for ='region') Region * :
				select(id ='region' name ='region' class ='form-control form-control-sm' )
					option(value ='')
					for region in regions
						if name
							if name.region
								option(value =region._id class ='form-control'  selected =(region._id.toString() == name.region._id || region._id.toString() == name.region) ? 'selected' : false) #{region._id}
							else
								option(value=region._id) #{region._id}
						else
							option(value=region._id) #{region._id}

			.form-group
				label(for ='gender') Gender * :
				select(id ='gender' name ='gender' class ='form-control form-control-sm' )
					option(value ='') 
					for gender in genders
						if name
							if name.gender
								option(value =gender._id class ='form-control'  selected =(gender._id.toString() == name.gender._id || gender._id.toString() == name.gender) ? 'selected' : false) #{gender._id}
							else
								option(value=gender._id) #{gender._id}
						else
							option(value=gender._id) #{gender._id}

			.form-group
				label(for ='specie') Specie * :
				select(id ='specie' name ='specie' class ='form-control form-control-sm' )
					option(value ='') 
					for specie in species
						if name
							if name.specie
								option(value =specie._id class ='form-control'  selected =(specie._id.toString() == name.specie._id || specie._id.toString() == name.specie) ? 'selected' : false) #{specie._id}
							else
								option(value=specie._id) #{specie._id}
						else
							option(value=specie._id) #{specie._id}

			.form-group.baby
				label(for ='baby') Baby * :
				select(id ='baby' name ='baby' class ='form-control form-control-sm' )
					option(value ='') 
					for decision in baby
						if name
							if name.baby
								option(value =decision._id class ='form-control'  selected =(decision._id.toString() == name.baby._id || decision._id.toString() == name.baby) ? 'selected' : false) #{decision._id}
							else
								option(value=decision._id) #{decision._id}
						else
							option(value=decision._id) #{decision._id}

			.form-group
				input(type ='hidden' id ='link' value ='oruko')

			.form-group
				input(type ='hidden' id ='update' value =(undefined === name ? '' : name.name))

			.form-group
				input(type ='hidden' id ='ethnic' value =(undefined === name ? '' : name.ethnic_group))

			.form-group
				input(type ='hidden' id ='rmethod' class ='rmethod' value =rmethod)

			.form-group
				p(id ='text-message')

			p
				button(type ='submit' title ='Submit' class ='btn btn-primary float-right px-4' id ='formSubmit') Submit